type Query {
  Role(where: RoleWhereUniqueInput!): Role!
  Roles(where: RoleWhereInput, orderBy: RoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Role!]!

  user(where: UserWhereUniqueInput!): User!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]!

  file(where: RoleWhereUniqueInput!): File!
  files(
    where: FileWhereInput
    orderBy: FileOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [File!]!
}

type Mutation {
  createRole(data: RoleCreateInput!): Role!
  updateRole(data: RoleUpdateInput!, where: RoleWhereUniqueInput!): Role
  deleteRole(where: RoleWhereUniqueInput!): Role

  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteUser(where: UserWhereUniqueInput!): User

  uploadFile(file: Upload!): File!
  uploadFiles(files: [Upload!]!): [File!]!
  changeFile(file: Upload!, where: FileWhereUniqueInput!): File
  deleteFile(where: FileWhereUniqueInput!): File
}